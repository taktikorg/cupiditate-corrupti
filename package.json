{
  "name": "@taktikorg/cupiditate-corrupti",
  "version": "7.8.99",
  "description": "",
  "main": "index.js",
  "scripts": {},
  "author": "taktikangt6",
  "license": "MIT",
  "dependencies": {
    "@taktikorg/aut-distinctio-repellat": "^2.3.29",
    "@taktikorg/consectetur-quo-quos": "^1.1.32",
    "@taktikorg/corporis-nihil-odit": "^3.3.28",
    "@taktikorg/deleniti-qui-dolorem": "^1.1.32",
    "@taktikorg/dolor-ratione-quibusdam": "^2.1.31",
    "@taktikorg/fugit-voluptatibus-quod": "^3.5.26",
    "@taktikorg/harum-reprehenderit-perferendis": "^1.3.30",
    "@taktikorg/illo-iure-sint": "^1.1.32",
    "@taktikorg/illum-accusamus-possimus": "^1.3.25",
    "@taktikorg/ipsa-totam-aperiam": "^2.3.29",
    "@taktikorg/iste-ex-tempore": "^1.5.28",
    "@taktikorg/itaque-nam-eos": "^2.3.29",
    "@taktikorg/itaque-tempore-exercitationem": "^2.1.31",
    "@taktikorg/maiores-dolores-aut": "^2.5.27",
    "@taktikorg/molestias-fuga-possimus": "^2.6.26",
    "@taktikorg/nam-esse-animi": "^3.4.27",
    "@taktikorg/necessitatibus-repudiandae-officia": "^2.3.29",
    "@taktikorg/nisi-reprehenderit-amet": "^1.1.32",
    "@taktikorg/placeat-voluptates-dolorum": "^1.3.30",
    "@taktikorg/praesentium-dolorum-quis": "^1.2.31",
    "@taktikorg/praesentium-neque-ipsam": "^1.4.29",
    "@taktikorg/quo-reiciendis-quibusdam": "^1.4.29",
    "@taktikorg/recusandae-ratione-veniam": "^2.1.31",
    "@taktikorg/similique-earum-soluta": "^3.2.29",
    "@taktikorg/similique-natus-officia": "^2.3.29",
    "@taktikorg/suscipit-modi-ratione": "^2.0.32",
    "@taktikorg/tempore-veniam-in": "^3.1.30",
    "@taktikorg/unde-animi-omnis": "^1.5.28",
    "@taktikorg/velit-nobis-blanditiis": "^1.4.17",
    "@taktikorg/voluptatem-pariatur-tenetur": "^1.6.27"
  },
  "keywords": [
    "scheme",
    "react-hook-form",
    "utilities",
    "Push",
    "operating-system",
    "prototype",
    "shell",
    "ECMAScript 7",
    "toStringTag",
    "redux-toolkit",
    "has",
    "babel",
    "trimStart",
    "test",
    "schema",
    "quote",
    "file system",
    "const",
    "agent",
    "link",
    "global object",
    "function.length",
    "deep-clone",
    "replay",
    "utility",
    "argv",
    "find",
    "shrinkwrap",
    "0",
    "toSorted",
    "make",
    "waf",
    "take",
    "busy",
    "fps",
    "monorepo",
    "express",
    "optimist",
    "hookform",
    "file",
    "live",
    "native",
    "less css",
    "password",
    "cloudwatch",
    "ES2016",
    "es2018",
    "fast-deep-clone",
    "fastcopy",
    "vest",
    "invariant",
    "formatting",
    "symlink",
    "Object.entries",
    "rgb",
    "espree",
    "typanion",
    "some",
    "sharedarraybuffer",
    "regular-expression",
    "entries",
    "logging",
    "waapi",
    "hot",
    "internal",
    "sort",
    "json-schema-validation",
    "zero",
    "symlinks",
    "cache",
    "utils",
    "redact",
    "byte",
    "interrupts",
    "commander",
    "6to5",
    "toolkit",
    "sorted",
    "zx",
    "compile less",
    "Int8Array",
    "ES2017",
    "dom-testing-library",
    "variables",
    "npm",
    "syntaxerror",
    "RegExp.prototype.flags",
    "byteLength",
    "Observables",
    "CSSStyleDeclaration",
    "less compiler",
    "ES7",
    "pnpm9",
    "deepclone",
    "japanese",
    "random",
    "fast-copy",
    "graphql",
    "jsonschema",
    "query",
    "openssl",
    "tools",
    "cloudsearch",
    "get",
    "eventDispatcher",
    "output",
    "touch",
    "signed",
    "ES2018",
    "s3",
    "proto",
    "authentication",
    "clone",
    "fs",
    "fast-deep-copy",
    "signals",
    "exit",
    "lockfile",
    "stringify",
    "windows",
    "jQuery",
    "helpers",
    "JSON-Schema",
    "Array.prototype.flat",
    "inspect",
    "writable",
    "circular",
    "flux",
    "Reflect.getPrototypeOf",
    "parser",
    "check",
    "assertion",
    "number",
    "signal",
    "reducer",
    "colors",
    "higher-order",
    "flags",
    "Object.keys",
    "self",
    "byteOffset",
    "reduce",
    "args",
    "eslint-plugin",
    "fastclone",
    "ES2022",
    "Int32Array",
    "tester",
    "json",
    "typescript",
    "style",
    "properties",
    "tdd",
    "flat",
    "arrays",
    "estree",
    "core-js",
    "-0",
    "ArrayBuffer",
    "Array.prototype.filter",
    "less.js",
    "deterministic",
    "positive",
    "mock",
    "type",
    "private",
    "binaries",
    "iteration",
    "extend",
    "findLastIndex",
    "curl",
    "weakmap",
    "ansi",
    "prefix",
    "importexport",
    "global",
    "functional",
    "less mixins",
    "ajv",
    "starter",
    "framer",
    "RxJS",
    "validation",
    "$.extend",
    "variables in css",
    "option",
    "equal",
    "fnmatch",
    "classes",
    "settings",
    "sham",
    "nope",
    "RFC-6455",
    "efficient",
    ".gitignore",
    "typedarrays",
    "BigInt64Array",
    "typed array",
    "view",
    "Float32Array",
    "coercible"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/taktikorg/cupiditate-corrupti.git"
  },
  "homepage": "https://github.com/taktikorg/cupiditate-corrupti/#readme",
  "bugs": {
    "url": "https://github.com/taktikorg/cupiditate-corrupti/issues"
  }
}
